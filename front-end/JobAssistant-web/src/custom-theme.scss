
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
 
$primary-color: #CC2A41;
$accent-color: #FEFCF3;
$secondary-color: #2A9D8F;
$primary-hover-color: purple; 
$accent-hover-color:red;
$secondary-hover-color:orange;


$custom-accent: mat.define-palette(
  (
    50: #e0f2f1,
    100: #b2dfdb,
    200: #80cbc4,
    300: #4db6ac,
    400: #26a69a,
    500: #2A9D8F, // Your primary color
    600: #00897b,
    700: #00796b,
    800: #00695c,
    900: #004d40,
    A100: #a7ffeb,
    A200: #64ffda,
    A400: #1de9b6,
    A700: #00bfa5,
    contrast: (
      50: black,
      100: black,
      200: black,
      300: white,
      400: white,
      500: white,
      600: white,
      700: white,
      800: white,
      900: white,
      A100: black,
      A200: black,
      A400: black,
      A700: black,
    )
  )
);

// Define the custom accent color palette
$custom-primary: mat.define-palette(
  (
    50: #fffefa,
    100: #fffdf5,
    200: #fffbee,
    300: #fff9e6,
    400: #fff7e1,
    500: #FEFCF3, // Your accent color
    600: #fff4d8,
    700: #fff2d1,
    800: #ffefc9,
    900: #ffebbe,
    A100: #ffffff,
    A200: #ffffff,
    A400: #ffffff,
    A700: #ffffff,
    contrast: (
      50: black,
      100: black,
      200: black,
      300: black,
      400: black,
      500: black,
      600: black,
      700: black,
      800: black,
      900: black,
      A100: black,
      A200: black,
      A400: black,
      A700: black,
    )
  )
);

$custom-theme: mat.define-light-theme(
  (
    color:(
      primary: $custom-primary,
      accent: $custom-accent
    ),
    typography: mat.define-typography-config(),

  )
);

@include mat.all-component-themes($custom-theme);

.mat-button.button{
  border-radius: 4px;
  &:hover {
    background-color: transparent;
  }
}


.mat-button.contrast-button {

  text-align: center;
  background-color: mat.get-color-from-palette($custom-accent,500);
  border-radius: 24px;
  padding: 24px;
  color:white !important;


  &:hover {
    background-color: mat.get-color-from-palette($custom-accent,700);
  }
}

.mat-button.suggested-button{
  text-align: center;
  background-color: mat.get-color-from-palette($custom-primary,500);
  border-radius: 24px;
  padding: 24px;
  box-shadow: inset;


  &:hover {
    background-color: mat.get-color-from-palette($custom-primary,200);
  }
}



// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$JobAssistant-web-primary: mat.define-palette(mat.$indigo-palette);
$JobAssistant-web-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$JobAssistant-web-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$JobAssistant-web-theme: mat.define-light-theme((
  color: (
    primary: $custom-primary,
    accent: $custom-accent,
  
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($JobAssistant-web-theme);

